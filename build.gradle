plugins {
    id 'com.github.johnrengelman.shadow' version '5.1.0'
    id 'java'
    id 'application'
}

repositories {
    mavenCentral()
    jcenter()
}

group = "com.superzanti.serversync"

configurations {
    shadow
    compile.extendsFrom shadow
}

dependencies {
    // Use JUnit Jupiter API for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.4.2'
    // Use JUnit Jupiter Engine for testing.
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.4.2'

    compile fileTree(dir: 'libs', include: '*.jar')
    shadow 'com.google.code.gson:gson:2.8.0'
    shadow 'commons-codec:commons-codec:1.10'
}

application {
    mainClassName = 'com.superzanti.serversync.ServerSync'
}

test {
    useJUnitPlatform()
}

jar {
    archivesBaseName = ssname
    archiveClassifier = ssversion
    destinationDirectory = file("$rootDir/publish")

    manifest {
        attributes 'Main-Class': 'com.superzanti.serversync.ServerSync'
    }
}

shadowJar {
    configurations = [project.configurations.shadow]
    archivesBaseName = ssname
    archiveClassifier = ssversion
    destinationDirectory = file("$rootDir/publish")
    minimize()

    dependencies {
        exclude 'forge*.jar'
    }
}

clean {
    def cleanupFiles = ["publish", "config", "logs", "mods"]

    for (name in cleanupFiles) {
        def f = file("$rootDir/$name")
        if (f.exists() && f.canWrite()) {
            f.deleteDir()
        }
    }
}
